apply plugin: 'java'

// see https://github.com/JetBrains/gradle-intellij-plugin

repositories {
    mavenCentral()
}

// set IDEA_HOME in gradle.properties in $GRADLE_HOME (~/.gradle/gradle.properties by default)
// to point to the local installation of IDEA; e.g.
// IDEA_HOME=/opt/share/IntelliJ/idea-IC-141.1532.4
def ideaLib = IDEA_HOME + '/lib/'

dependencies {
    compile files('lib/google.gdt.eclipse.login.common.jar')
    compile files('lib/google-gct-login-context-ij-pg.jar')
    compile files('lib/google-api-services-oauth2-v2-rev70-1.18.0-rc.jar')
    compile files('lib/google-http-client-jackson-1.18.0-rc.jar')
    compile fileTree(dir: 'third_party/repackaged', include: '*.jar')
    // Where should we load these from? The versions bundled with IDEA contain
    // classes that are not in the versions loaded from Maven central; e.g. PlatformUtils
    compile files(ideaLib + 'openapi.jar')
    compile files(ideaLib + 'annotations.jar')
    compile files(ideaLib + 'extensions.jar')
    compile files(ideaLib + 'idea.jar')
    compile files(ideaLib + 'util.jar')

    // todo(elharo): do we need to bundle these in zip as well?
    compile (
        [group: 'com.google.guava', name: 'guava', version: '18.0'],
        [group: 'com.google.collections', name: 'google-collections', version: '1.0'],
        [group: 'net.jcip', name: 'jcip-annotations', version: '1.0'],
        [group: 'javax.servlet', name: 'servlet-api', version: '2.5'],
    )
    testCompile (
        [group: 'junit', name: 'junit', version: '4.+'],
        [group: 'org.mockito', name: 'mockito-all', version: '1.9.5'],
    )
}

sourceSets {
    main {
        java {
            srcDirs 'src', 'resources'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDirs 'testSrc'
        }
    }
}

// because plugin.xml doesn't live in resources
jar {
    baseName = 'google-login'
    from ('./src') {
        include 'META-INF/plugin.xml'
    }
}

task plugin(type: Zip,  dependsOn: jar) {
    baseName = 'google-login'
    from('lib/') {
        into('lib')
    }
    from('build/libs') {
        into('lib')
    }
}

apply plugin: 'java'

// see https://github.com/JetBrains/gradle-intellij-plugin

repositories {
    mavenCentral()
}

// point this at your local IDEA installation
def ideaLib = '/usr/local/google/home/elharo/IntelliJ/idea-IC-141.1532.4/lib/'

dependencies {
    compile files('lib/google.gdt.eclipse.login.common.jar')
    compile files('lib/google-gct-login-context-ij-pg.jar')
    compile files('lib/google-api-services-oauth2-v2-rev70-1.18.0-rc.jar')
    compile files('lib/google-http-client-jackson-1.18.0-rc.jar')
    compile fileTree(dir: 'third_party/repackaged', include: '*.jar')
    // Where should we load these from? The versions bundled with IDEA contain
    // classes that are not in the versions loaded from Maven central; e.g. PlatformUtils
    compile files(ideaLib + 'openapi.jar')
    compile files(ideaLib + 'annotations.jar')
    compile files(ideaLib + 'extensions.jar')
    compile files(ideaLib + 'idea.jar')
    compile files(ideaLib + 'util.jar')

    compile (
        [group: 'com.google.api-client', name: 'google-api-client', version: '1.20.0'],
        [group: 'com.google.http-client', name: 'google-http-client', version: '1.20.0'],
        [group: 'com.google.oauth-client', name: 'google-oauth-client', version: '1.20.0'],
        [group: 'com.google.guava', name: 'guava', version: '18.0'],
        [group: 'com.google.collections', name: 'google-collections', version: '1.0'],
        [group: 'net.jcip', name: 'jcip-annotations', version: '1.0'],
      //  [group: 'com.intellij', name: 'openapi', version: '7.0.3'],
        [group: 'javax.servlet', name: 'servlet-api', version: '2.5'],
       // [group: 'org.jetbrains', name: 'annotations', version: '13.0'],
    )
    testCompile (
            [group: 'junit', name: 'junit', version: '4.+'],
            [group: 'org.mockito', name: 'mockito-all', version: '1.9.5'],
    )
}

sourceSets {
    main {
        java {
            srcDirs 'src', 'resources'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDirs 'testSrc'
        }
    }
}
